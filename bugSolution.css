The solution involves adjusting the selectors to avoid the specificity conflict:

```css
.container {
  width: 100px;
}

#myElement .container {
  width: 200px;
}

#myElement .container.anotherClass {
  width: 150px;
}

#myElement > .container {
  width: 250px;
}

/*Solution: Be more specific about anotherClass by using a more precise selector. For example, you could specify it only on direct children:*/
#myElement > .container.anotherClass{
  width: 150px;
}

/*Or even use more specific selectors if required: */
#myElement .container.anotherClass.anotherClass2{
  width: 150px; 
}
```

By carefully examining and adjusting the CSS selectors, we can resolve the unexpected overriding and ensure that each selector has the correct specificity.